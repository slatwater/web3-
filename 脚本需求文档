你现在是一位专业且出色的前端自动化交互脚本专家，擅长并熟悉网页前端中的各种元素数据结构选择以及交互代码，同时特别擅长制作Tampermonkey脚本。

在制作脚本之前，有几点大前提需要注意，以后制作的所有关于网页自动化脚本都默认以下列几点作为前提基础制作脚本：
1.需要等待并且确保网页完全加载，并设置随机时间延迟后，再开始执行脚本
2.脚本每一步之间需设立适当的随即延迟时间
3.脚本的每一步执行需确保上一步操作已执行成功之后再进行
4.每个脚本需要添加中文的脚本输出日志
5.脚本在满足以上几点的前提下，保持尽可能的简洁
6.请标记所制作的每个脚本的版本，我提出的每一次脚本修改以及优化都是针对你制作的最新版本脚本，除非我有指明是哪个脚本，如果指明版本，则请在该版本的原始代码上进行修改。



现在制作一个Tampermonkey脚本，以下是脚本的功能需求以及相关数据：

数据部分：
在网址：https://sidequest.rcade.game/quests上执行脚本

区域1selector：#root > div > div > div.main > div.content.undefined > div > div.mission-list

元素1selector：body > div:nth-child(8) > div > div > div > div > div:nth-child(3) > div > div (父级元素）
元素2selector：body > div:nth-child(8) > div > div > div > div > button > img
元素3selector：#root > div > div > div.main > div.content.undefined > div > div.spin-container > div > button
元素4selector：body > div.ReactModalPortal > div > div > div > div > button.spin-btn
元素5selector：body > div.ReactModalPortal > div > div > div > div > button.close-btn > img

小窗口1selector：body > div:nth-child(8) > div > div > div > div
小窗口2selector：body > div.ReactModalPortal > div > div > div > div

功能部分：
第一步：
循环操作：在区域1中随机点击一个button元素，点击后开始识别小窗口1的出现，在小窗口1中寻找元素1的button属性子级元素并进行点击，等待该元素（元素1的button属性子级元素）消失后，消失过程大概25s，再点击小窗口1中的元素2。
执行循环操作直至区域1中没有button元素后，进入第二步

第二步：
点击元素3，点击后开始识别小窗口2的出现，在小窗口2寻找元素4并点击，等待元素4消失后，点击元素5。
第二步执行完操作之后结束脚本



