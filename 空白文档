现在制作一个Tampermonkey脚本，以下是脚本的功能需求以及相关数据：

数据部分：

目标网址：https://app.union.build/*

元素1selector：body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex.flex-col.h-full.w-full.justify-between.p-4.overflow-y-scroll > div.flex.flex-col.gap-2 > div:nth-child(1) > button:nth-child(1)
元素1-1selector：body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex.flex-col.h-full.overflow-y-scroll > div:nth-child(6) > button
               
元素2selector：body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex.flex-col.h-full.w-full.justify-between.p-4.overflow-y-scroll > div.flex.flex-col.gap-2 > div:nth-child(1) > button:nth-child(2)
元素2-1selector：body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex.flex-col.h-full.overflow-y-scroll > div:nth-child(4) > button
元素2-2selector：body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex.flex-col.h-full.overflow-y-scroll > div:nth-child(2) > button

元素3selector：body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex.flex-col.h-full.w-full.justify-between.p-4.overflow-y-scroll > div.flex.flex-col.gap-2 > div.flex.flex-col.w-full.gap-2 > button
元素3-1selector：body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex-1.relative > div > button

输入框1element：<input class="flex h-10 w-full border bg-background text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 p-1 border-red-500" id="amount" type="text" name="amount" required="" autocorrect="off" placeholder="0.00" spellcheck="false" autocomplete="off" inputmode="decimal" data-field="amount" autocapitalize="none" pattern="^[0-9]*[.]?[0-9]*$">
元素4xpath：/html/body/div[1]/div[2]/div/div/div/div/div/div/div[2]/div[1]/div[4]/button

元素5xpath：/html/body/div[1]/div[2]/div/div/div/div/div/div/div[2]/div[2]/button

元素6xpath：/html/body/div[1]/div[2]/div/div/div/div/div/div/button

元素7xpath：/html/body/div[1]/div[2]/div/main/div/div/section/div/div/div[3]/div[1]/div[1]/div[1]

元素8xpath：/html/body/div[1]/header/nav/a[1]

功能需求：
循环1：
（点击元素1，持续监测等待元素1-1的出现并点击，然后持续监测等待元素2的出现并点击，然后持续监测等待元素2-1的出现并点击。然后持续监测等待元素3的出现并点击，然后持续监测等待元素3-1的出现并点击。
等待2-3s后在输入框1中随机输入0.000011-0.00003范围内的一个值。
然后等待1-2s后点击元素4
然后等待2-4s后点击元素5
然后持续监测等待元素6的出现并点击
然后持续检测并等待元素7出现之后，点击元素8）
循环1执行随机15-25次之后，执行循环2
循环2：
（点击元素1，持续监测等待元素1-1的出现并点击，然后持续监测等待元素2的出现并点击，然后持续监测等待元素2-2的出现并点击。然后持续监测等待元素3的出现并点击，然后持续监测等待元素3-1的出现并点击。
等待2-3s后在输入框1中随机输入0.000011-0.00003范围内的一个值。
然后等待1-2s后点击元素4
然后等待2-4s后点击元素5
然后持续监测等待元素6的出现并点击
然后持续检测并等待元素7出现之后，点击元素8）
循环2执行随机15-25次之后，脚本结束

注意事项：
1.每一步骤之间设立随机延迟，脚本不要执行的过快
2.每一次循环需要设置随机间隔
3.仔细分析输入框属性，输入框输入的值必须真实有效，必须要触发输入事件，是后续步骤可以进行





body > div.max-w-screen.h-dvh.max-h-dvh.flex.flex-col > div.flex.flex-1.overflow-y-auto.bg-background > div > div > div > div > div > div > div.flex.flex-col.h-full.w-full.justify-between.p-4.overflow-y-scroll > div.flex.flex-col.gap-2 > div:nth-child(1) > button:nth-child(1)


